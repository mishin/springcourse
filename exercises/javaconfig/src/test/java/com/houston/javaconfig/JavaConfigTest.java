package com.houston.javaconfig;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNotSame;
import static org.junit.Assert.assertSame;
import static org.junit.Assert.assertTrue;

import org.junit.Before;
import org.junit.Test;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

/**
 * MAKE ALL TESTS PASS.
 * 
 * DO NOT EDIT THIS FILE!!!
 */
public class JavaConfigTest {

	AnnotationConfigApplicationContext ctx;
	
	@Before
	public void before() {
		ctx = new AnnotationConfigApplicationContext(Config.class);
	}
	
	@Test
	public void contextContainsExactlyTwoCars() {
		String[] names = ctx.getBeanNamesForType(Car.class);
		assertEquals(2, names.length);
	}
	
	@Test
	public void fordIsFoundFromContext() {
		Car ford = ctx.getBean("ford", Car.class);
		assertNotNull(ford);
	}

	@Test
	public void opelIsFoundFromContext() {
		Car opel = ctx.getBean("opel", Car.class);
		assertNotNull(opel);
	}
	
	@Test
	public void fordEngineIsFast() {
		Car ford = ctx.getBean("ford", Car.class);
		assertTrue(ford.getEngine().isFast());
	}
	
	@Test
	public void opelEngineIsNotFast() {
		Car opel = ctx.getBean("opel", Car.class);
		assertFalse(opel.getEngine().isFast());
	}

	@Test
	public void fordUsesSingletonScope() {
		Car firstFord = ctx.getBean("ford", Car.class);
		Car secondFord = ctx.getBean("ford", Car.class);

		assertSame(firstFord, secondFord);
		assertTrue(ctx.isSingleton("ford"));
	}
	
	@Test
	public void opelUsesPrototypeScope() {
		Car firstOpel = ctx.getBean("opel", Car.class);
		Car secondOpel = ctx.getBean("opel", Car.class);
		
		assertNotSame(firstOpel, secondOpel);
		assertTrue(ctx.isPrototype("opel"));
	}
	
	@Test
	public void garageIsFoundFromContext() {
		Garage garage = ctx.getBean(Garage.class);
		assertNotNull(garage);
	}
	
	@Test
	public void garageHasOwner() {
		Garage garage = ctx.getBean(Garage.class);
		assertTrue(garage.isOwned());
	}
	
	@Test
	public void garageHasDestroyMethod() {
		Garage garage = ctx.getBean(Garage.class);
		assertFalse(garage.isDestroyed());
		
		ctx.close();
		assertTrue(garage.isDestroyed());
	}
}